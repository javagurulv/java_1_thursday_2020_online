Найдите в интернете информацию про класс java.util.Optional.

Для чего применяются объекты этого класса?
Ответ:
1.Optional - новый класс в пакете java.util,
является контейнером (оберткой) для значений которая также может безопасно содержать null.
Благодаря опциональным типам можно забыть про проверки на null и NullPointerException.
2.Optional — это контейнер объекта, который может содержать или не содержать ненулевое значение.

Какие два состояния могут быть у объектов этого класса?
Ответ:
Или имеет объект или пустой (Empty).

Как создаются экземпляры данного класса?
Ответ:
Класс Optional нельзя создать прямым образом через new.
Он имеет приватный конструктор. Но для его создания существуют статические методы.
1. Optional.empty() - Этот метод создает пустой класс Optional.
2. Optional.of(T value) - Создает опционал с определенно не null значением.
Этот метод нужно использовать только тогда, когда мы уверены что значение не является null.

Как можно проверить в каком состоянии находится экземпляр данного класса?
Ответ:
isPresent()
Возвращает булево значение true если в опционале значение есть и возвращает false если в опционале значение null.

Как можно получить объект, который находится внутри Optional?
Ответ:
get()
Этот метод возвращает значение из опционала.
Нужно аккуратно использовать этот метод, так как он может бросить исключение NoSuchElementException,
если значение в опционале равно null.
Чтобы безопасно использовать этот метод перед его вызовом надо вызвать метод isPresent()